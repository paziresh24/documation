{
  "openapi": "3.0.1",
  "info": {
    "title": "Nelson APIs",
    "version": "v1.0.0",
    "description": "This API provides functionalities for managing medical centers, handling doctor appointments (viewing, deleting), and setting doctors' working hours and vacations."
  },
  "servers": [
    {
      "url": "https://apigw.paziresh24.com"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Medical Centers"
    },
    {
      "name": "Appointments"
    },
    {
      "name": "Work Hours"
    },
    {
      "name": "Vacations"
    }
  ],
  "paths": {
    "/open-platform/v1/nelson/medical-centers": {
      "get": {
        "summary": "Retrieve All",
        "description": "Fetches a list of medical center",
        "operationId": "getCenters",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": ["Medical Centers"],
        "x-scopes": ["view-calendar"],
        "responses": {
          "200": {
            "description": "Successful response with the list of medical centers.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalCentersResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions."
          },
          "default": {
            "description": "Unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/open-platform/v1/nelson/medical-centers/{id}": {
      "put": {
        "summary": "Update",
        "description": "Update medical center",
        "operationId": "putCenters",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": ["Medical Centers"],
        "x-scopes": ["view-calendar"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMedicalCenterBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateMedicalCentersResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions."
          },
          "default": {
            "description": "Unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/open-platform/v1/nelson/appointments": {
      "get": {
        "summary": "Retrieve All",
        "description": "Fetches a list of doctor appointments based on the provided filters.",
        "operationId": "getAppointments",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": ["Appointments"],
        "x-scopes": ["view-calendar"],
        "parameters": [
          {
            "name": "center_id",
            "in": "query",
            "description": "ID of the medical center to filter appointments.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Filter by appointment date (Format: YYYY-MM-DD).",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with the list of appointments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions."
          },
          "default": {
            "description": "Unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/open-platform/v1/nelson/appointments/{id}": {
      "delete": {
        "summary": "Delete",
        "description": "Delete appointments by id.",
        "operationId": "deleteAppointments",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": ["Appointments"],
        "x-scopes": ["view-calendar"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAppointmentResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions."
          },
          "default": {
            "description": "Unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/open-platform/v1/nelson/work-hours": {
      "get": {
        "summary": "Retrieve All",
        "description": "Fetches a list of workhours by center",
        "operationId": "getWorkhours",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "center_id",
            "in": "query",
            "description": "ID of the medical center to filter appointments.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Work Hours"],
        "x-scopes": ["view-calendar"],
        "responses": {
          "200": {
            "description": "Successful response with the list of workhours.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalCentersResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions."
          },
          "default": {
            "description": "Unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Set",
        "description": "Set workhours for center",
        "operationId": "setWorkhours",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetWorkhoursBody"
              }
            }
          },
          "required": true
        },
        "tags": ["Work Hours"],
        "x-scopes": ["view-calendar"],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetWorkhoursResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions."
          },
          "default": {
            "description": "Unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/open-platform/v1/nelson/vacations/{center_id}": {
      "get": {
        "summary": "Retrieve All",
        "description": "Fetches a list of vacations by center",
        "operationId": "getVacations",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "center_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start date",
            "required": false,
            "schema": {
              "type": "integer",
              "examples": [1739910600]
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date",
            "required": false,
            "schema": {
              "type": "integer",
              "examples": [1742502600]
            }
          }
        ],
        "tags": ["Vacations"],
        "x-scopes": ["view-calendar"],
        "responses": {
          "200": {
            "description": "Successful response with the list of workhours.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacationsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions."
          },
          "default": {
            "description": "Unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create",
        "description": "Create vacation for center",
        "operationId": "createVacation",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "center_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVacationBody"
              }
            }
          },
          "required": true
        },
        "tags": ["Vacations"],
        "x-scopes": ["view-calendar"],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVacationResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions."
          },
          "default": {
            "description": "Unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update",
        "description": "Update vacation",
        "operationId": "updateVacation",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "center_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVacationBody"
              }
            }
          },
          "required": true
        },
        "tags": ["Vacations"],
        "x-scopes": ["view-calendar"],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateVacationResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions."
          },
          "default": {
            "description": "Unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "description": "Delete vacation",
        "operationId": "deleteVacation",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "center_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteVacationBody"
              }
            }
          },
          "required": true
        },
        "tags": ["Vacations"],
        "x-scopes": ["view-calendar"],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteVacationResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions."
          },
          "default": {
            "description": "Unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MedicalCentersResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "examples": ["SUCCESS"]
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          }
        }
      },
      "UpdateMedicalCenterBody": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "city": {
            "type": "integer"
          },
          "province": {
            "type": "integer"
          },
          "tells": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lat": {
            "type": "integer"
          },
          "lon": {
            "type": "integer"
          }
        }
      },
      "UpdateMedicalCentersResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "examples": ["SUCCESS"]
          },
          "message": {
            "type": "string",
            "examples": ["مرکز با موفقیت آپدیت شد"]
          }
        }
      },
      "AppointmentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "examples": ["SUCCESS"]
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique appointment identifier.",
                  "examples": ["66b0a3eb-fe64-11ef-a891-005056ad823b"]
                },
                "type": {
                  "type": "string",
                  "description": "Type of appointment booking.",
                  "examples": ["book"]
                },
                "user_center_id": {
                  "type": "string",
                  "description": "ID of the medical center.",
                  "examples": ["9b87618a-62db-482b-8b96-ae94a92039d5"]
                },
                "book_status": {
                  "type": "string",
                  "description": "Status of the booking (e.g., not_came, came, not_visited,visited).",
                  "examples": ["not_came"]
                },
                "ref_id": {
                  "type": "string",
                  "description": "Reference ID for the booking.",
                  "examples": ["1076232793"]
                },
                "from": {
                  "type": "integer",
                  "description": "Start time in Unix timestamp format.",
                  "examples": [1741792200]
                },
                "to": {
                  "type": "integer",
                  "description": "End time in Unix timestamp format.",
                  "examples": [1741792500]
                },
                "from_date": {
                  "type": "string",
                  "description": "Start time in human-readable format.",
                  "examples": ["2025-03-12 18:40:00"]
                },
                "to_date": {
                  "type": "string",
                  "description": "End time in human-readable format.",
                  "examples": ["2025-03-12 18:45:00"]
                },
                "name": {
                  "type": "string",
                  "description": "First name of the patient.",
                  "examples": ["Amirhossein"]
                },
                "family": {
                  "type": "string",
                  "description": "Last name of the patient.",
                  "examples": ["Beigi"]
                },
                "display_name": {
                  "type": "string",
                  "description": "Full name of the patient.",
                  "examples": ["Amirhossein Beigi"]
                },
                "cell": {
                  "type": "string",
                  "description": "Patient's phone number.",
                  "examples": ["09123456789"]
                },
                "national_code": {
                  "type": "string",
                  "description": "National identification number.",
                  "examples": ["1111111111"]
                },
                "prescription": {
                  "type": "boolean",
                  "description": "Indicates if a prescription was issued.",
                  "examples": [false]
                },
                "payment_status": {
                  "type": "string",
                  "description": "Payment status of the appointment (e.g., paid, not_paid, refunded).",
                  "examples": ["paid"]
                },
                "expired": {
                  "type": "integer",
                  "description": "Indicates whether the appointment has expired (1 for expired, 0 for active).",
                  "examples": [0]
                },
                "user_payment": {
                  "type": "integer",
                  "description": "Total amount paid by the user.",
                  "examples": [140000]
                },
                "online_channel": {
                  "type": "string",
                  "description": "The online channel used for booking.",
                  "examples": ["whatsapp"]
                },
                "delete_reason": {
                  "type": "string",
                  "nullable": true,
                  "description": "Reason for cancellation if applicable.",
                  "examples": [null]
                }
              }
            }
          }
        }
      },
      "DeleteAppointmentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "examples": ["SUCCESS"]
          },
          "message": {
            "type": "string",
            "examples": ["درخواست شما با موفقیت پردازش شد"]
          }
        }
      },
      "SetWorkhoursBody": {
        "type": "object",
        "properties": {
          "center_id": {
            "type": "string"
          },
          "cost": {
            "type": "integer",
            "examples": [0]
          },
          "duration": {
            "type": "integer",
            "description": "Visit duration(minute)",
            "examples": [5]
          },
          "workHours": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "day": {
                  "type": "integer",
                  "description": "Day of weeks (e.g., 1, 2, ..., 7)",
                  "examples": [1]
                },
                "from": {
                  "type": "string",
                  "examples": ["08:00"]
                },
                "to": {
                  "type": "string",
                  "examples": ["12:00"]
                }
              }
            }
          }
        }
      },
      "SetWorkhoursResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "examples": ["SUCCESS"]
          },
          "message": {
            "type": "string",
            "examples": ["درخواست شما با موفقیت پردازش شد"]
          }
        }
      },
      "VacationsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "examples": ["SUCCESS"]
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "duration": {
                  "type": "integer",
                  "examples": [262800]
                },
                "formatted_duration": {
                  "type": "string",
                  "examples": ["3 روز"]
                },
                "formatted_from": {
                  "type": "string",
                  "examples": ["پنج‌شنبه 23 اسفند-00:00"]
                },
                "formatted_to": {
                  "type": "string",
                  "examples": ["یکشنبه 26 اسفند-01:00"]
                },
                "from": {
                  "type": "string",
                  "examples": ["1741811400"]
                },
                "to": {
                  "type": "string",
                  "examples": ["1742074200"]
                }
              }
            }
          }
        }
      },
      "CreateVacationBody": {
        "type": "object",
        "properties": {
          "from": {
            "type": "integer",
            "examples": [1741811400]
          },
          "to": {
            "type": "integer",
            "examples": [1742074200]
          }
        }
      },
      "CreateVacationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "examples": ["SUCCESS"]
          },
          "message": {
            "type": "string",
            "examples": ["درخواست شما با موفقیت پردازش شد"]
          }
        }
      },
      "UpdateVacationBody": {
        "type": "object",
        "properties": {
          "from": {
            "type": "integer",
            "examples": [1741811400]
          },
          "to": {
            "type": "integer",
            "examples": [1742074200]
          },
          "old_from": {
            "type": "integer",
            "examples": [1741811400]
          },
          "old_to": {
            "type": "integer",
            "examples": [1742074200]
          }
        }
      },
      "UpdateVacationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "examples": ["SUCCESS"]
          },
          "message": {
            "type": "string",
            "examples": ["درخواست شما با موفقیت پردازش شد"]
          }
        }
      },
      "DeleteVacationBody": {
        "type": "object",
        "properties": {
          "from": {
            "type": "integer",
            "examples": [1741811400]
          },
          "to": {
            "type": "integer",
            "examples": [1742074200]
          }
        }
      },
      "DeleteVacationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "examples": ["SUCCESS"]
          },
          "message": {
            "type": "string",
            "examples": ["درخواست شما با موفقیت پردازش شد"]
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "The token must be sent in the `Authorization` header."
      }
    }
  },
  "x-original-swagger-version": "2.0"
}
